#
#data
#
CLOCK	START	0
TWELVE	WORD	12
HOURS	WORD	3600	# 60*60 seconds in an hour
STORE	WORD	0	# Store hours
AMORPM	WORD	-1	# ZERO if AM, else -1 
MINS	WORD	60	# 60 seconds in a minute
ZERO	WORD	0
ASCII	BYTE	X'30'	#ASCII value for zero in hex
TWO	WORD	2
DEVICE	BYTE	X'40'
IF	WORD	-1	# If 24 hours is enabled this will be zero 
MSB	WORD	8388607	# 0111.. bit mask to make last bit of MSB zero 
#
#code
#
# Load into A register TIMER which is at the last 3 bytes
	LDA	TIMER
	STA	SAVED	
	COMP	ZERO
	JGT	CALC	# Jump to CALC if 12 hour format
ADJUST	AND	MSB	# change MSB to 0		
	STA	SAVED
	LDA	ZERO
	STA	IF
#CALCULATE HOURS/MINS	
CALC	LDA	SAVED
	DIV	HOURS
	STA	STORE
	LDA	SAVED
LOOP1	SUB	HOURS
	COMP	HOURS
	JGT	LOOP1	
	DIV	MINS
	STA	MINS
# FIX HOURS FOR 12 Hour format HHMMT
	LDA	IF
	COMP	ZERO
	JEQ	OUTPUT	# output hours in 24 format
	LDA	STORE
	COMP	TWELVE
	JEQ	PMORAM
	JLT	PMORAM
	SUB	TWELVE
	STA	STORE
	J	OUTPUT
# Store ZERO in AMORPM if AM
PMORAM	LDA	ZERO
	STA	AMORPM	
# JUMP HERE IF 24 HOUR FORMAT		
OUTPUT	LDX	ZERO
	LDA	ZERO
# LOOP TO WRITE HOURS TO DEVICE
LOOP2	LDCH	STORE,X
	ADD	ASCII
	WD	DEVICE
	TIX	TWO
	JLT	LOOP2				
	LDX	ZERO
	LDA	ZERO
#LOOP TO WRITE MINS TO DEVICE
LOOP3	LDCH	MINS,X
	ADD	ASCII	
	WD	DEVICE
	TIX	TWO
	JLT	LOOP3
#CHECK TO WRITE AM, PM, OR NOTHING TO DEVICE
	LDA	IF
	COMP	ZERO
	JEQ	ENDING
	LDA	AMORPM
	COMP	ZERO
	JLT	PM
	JEQ	AM
AM	BYTE	X'41'
	LDCH	AM
	WD	DEVICE
	J	ENDING
PM	BYTE	X'50'
	LDCH	PM
	WD	DEVICE
SAVED	RESW	1	# Captured timer value at program start
TIMER	RESW    1       # Make sure TIMER lines up with 7FFD
ENDING	END	CLOCK
